version: "3.9"

services:
  mongodb:
    image: mongo:latest
    container_name: off_mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./mongo-data:/data/db
    networks:
      - backend

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: off_api
    restart: always
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGODB_URI=${MONGODB_URI}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.off_api.rule=Host(`api.ohmdesign.co.uk`)"
      - "traefik.http.routers.off_api.entrypoints=websecure"
      - "traefik.http.services.off_api.loadbalancer.server.port=${PORT}"
      - "traefik.http.routers.off_api.tls.certresolver=myresolver"
    networks:
      - backend
      - traefik_network

  mongo-express:
    image: mongo-express
    container_name: off_mongo_express
    restart: always
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.off_mongo_express.rule=Host(`db.ohmdesign.co.uk`)"
      - "traefik.http.routers.off_mongo_express.entrypoints=websecure"
      - "traefik.http.services.off_mongo_express.loadbalancer.server.port=8081"
      - "traefik.http.routers.off_mongo_express.tls.certresolver=myresolver"
    networks:
      - backend
      - traefik_network

networks:
  backend:
  traefik_network:
    external: true
